server {
    listen      80;
    server_name domain;
    return      301 http://www.domain$request_uri;
}

server {
    listen   80;

    # If you're using Laravel, document root must be pointing to /public path
    root        /home/username/www/;
    index       index.php index.html;
    server_name www.domain;
    charset     utf-8;

    error_log   /var/log/nginx/sites/projectname-error.log;
    add_header  X-Frame-Options SAMEORIGIN;

    location / {
        # Url rewrite rules - Use these line if you're using CakePHP and CodeIgniter
        #if (-f $request_filename) {
        #   break;
        #}
        #if (-d $request_filename) {
        #   break;
        #}
        #rewrite ^(.+)$ /index.php?q=$1 last;

        # Url rewrite rules - Use these line if you're using Laravel
        try_files $uri $uri/ /index.php?$query_string;
    }

    # pass the PHP scripts to FastCGI server listening on unix:/var/run/php5-fpm.sock
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        fastcgi_pass unix:/var/run/php5-fpm.sock;
        fastcgi_index index.php;
        include fastcgi_params;
    }

    # Tell the browser to cache the static contents with cache-control
    location ~ ^/(img|cjs|ccss)/ {
        access_log      off;
        log_not_found   off;
        expires         360d;
        add_header      Cache-Control public;
    }

    # Tell the browser to cache the static contents with cache-control
    # Use this as an alternative case if we still have any static contents that isn't being cached.
    location ~* \.(jpg|jpeg|gif|png|webp|svg|svgz|tif|tiff|css|js|ico|ttf|otf|woff|eot)$ {
        access_log      off;
        log_not_found   off;
        expires         360d;
        add_header      Cache-Control public;
    }

    # Deny access to hidden files
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Uncomment these lines in staging server
    #location /robots.txt {
    #   alias /etc/nginx/robots.txt;
    #}
}
